include:
  - template: Code-Quality.gitlab-ci.yml
  - local: 'gitlab/terraform.yml'

stages:
  - prepare
  - test
  - build
  - deploy
  - clean

variables:
  SWAGGER_CLI_VERSION: 4.0.4


.validate-oas:
  stage: prepare
  needs: []
  image: node:14
  script:
    - npm install -g swagger-cli@$SWAGGER_CLI_VERSION
    - swagger-cli validate $OAS_FILE
  rules:
    # Todo: Use scheduler
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'
    # TODO: Was macht der Befehl
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $OAS_FILE
      when: on_success


# Build frontend Image and push to registry
.build-frontend:
  stage: build
  needs: [ ]
  image: $CI_REGISTRY/developer/images/node-java:node-16-jre-11
  before_script:
    - apt-get update -y && apt-get upgrade -y
    - curl https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -o google-chrome-stable_current_amd64.deb
    - apt install -y ./google-chrome*.deb;
    - export CHROME_BIN=/usr/bin/google-chrome
  script:
    - cd $DIR
    - npm install --cache .npm_cache
    - npm run lint
    - npm run build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
      when: on_success

.build-frontend-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --reproducible
      --context $DIR
      --dockerfile Dockerfile
      --destination $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
  variables:
    LABEL: $CI_COMMIT_REF_NAME
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "main"'
      variables:
        LABEL: "latest"
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        LABEL: "latest"
    - if: '$CI_COMMIT_TAG'
      variables:
        LABEL: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
      when: on_success

build-frontend:
  extends:
    - .build-frontend
  variables:
    DIR: 'services/frontend'
    IMG_NAME: 'frontend'
  artifacts:
    paths:
      - services/frontend/dist/os4ml
  cache:
    key: frontend
    paths:
      - services/frontend/node_modules
      - services/frontend/.npm_cache

build-frontend-image:
  extends:
    - .build-frontend-image
  needs:
    - build-frontend
  dependencies:
    - build-frontend
  variables:
    DIR: 'services/frontend'
    IMG_NAME: 'frontend'

# Build Objectstore-manager image
os-manager-validate-oas:
  extends:
    - .validate-oas
  variables:
    OAS_FILE: 'services/objectstore-manager/oas/objectstore-manager-oas.yaml'

os-manager-build-oas:
  stage: test
  needs: []
  image: gitlab-registry.wogra.com/developer/images/node-java:node-16-jre-11
  before_script:
    - cd $DIR
    - npm install @openapitools/openapi-generator-cli -g
    - openapi-generator-cli version
  script:
    - openapi-generator-cli generate
      -i ./oas/objectstore-manager-oas.yaml
      -g python-fastapi
      -o ./build
      --global-property models,supportingFiles

  variables:
    DIR: 'services/objectstore-manager'
  artifacts:
    untracked: true

os-manager-validate-backend:
  stage: test
  needs: [os-manager-build-oas]
  image: docker:19.03.13-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd $DIR
    - docker build
      --target builder-base
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
    - docker build
      --target lint
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:lint
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:lint
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:lint
    - docker build
      --target test
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:test
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:test
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:test
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  variables:
    DOCKER_DRIVER: overlay2
    DIR: 'services/objectstore-manager'
    IMG_NAME: 'objectstore-manager'
    DOCKER_BUILDKIT: 1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
      when: on_success

os-manager-build:
  stage: build
  needs:
    - os-manager-validate-backend
    - os-manager-build-oas
  image: docker:19.03.13-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd $DIR
    - docker build
      --target builder-base
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
    - docker build
      --target production
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
  variables:
    DOCKER_DRIVER: overlay2
    DIR: 'services/objectstore-manager'
    IMG_NAME: 'objectstore-manager'
    DOCKER_BUILDKIT: 1
    LABEL: $CI_COMMIT_REF_NAME
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "main"'
      variables:
        LABEL: "latest"
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        LABEL: "latest"
    - if: '$CI_COMMIT_TAG'
      variables:
        LABEL: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
      when: on_success

# Build Jobmanager image
job-manager-validate-oas:
  extends:
    - .validate-oas
  variables:
    OAS_FILE: 'services/job-manager/oas/job-manager-oas.yaml'

job-manager-build-oas:
  stage: test
  needs: []
  image: gitlab-registry.wogra.com/developer/images/node-java:node-16-jre-11
  before_script:
    - cd $DIR
    - npm install @openapitools/openapi-generator-cli -g
    - openapi-generator-cli version
  script:
    - openapi-generator-cli generate
      -i ./job-manager/oas/job-manager-oas.yaml
      -g python-fastapi
      -o ./job-manager/build
      --global-property models,supportingFiles

    - openapi-generator-cli generate
      -i ./objectstore-manager/oas/objectstore-manager-oas.yaml
      -g python
      -o ./job-manager/build/clients/objectstore
  variables:
    DIR: 'services'
  artifacts:
    untracked: true

job-manager-validate-backend:
  stage: test
  needs: [job-manager-build-oas]
  dependencies:
    - job-manager-build-oas
  image: docker:19.03.13-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd $DIR
    - docker build
      --target builder-base
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
    - docker build
      --target lint
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:lint
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:lint
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:lint
    - docker build
      --target test
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:test
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:test
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:test
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  variables:
    DOCKER_DRIVER: overlay2
    DIR: 'services/job-manager'
    IMG_NAME: 'job-manager'
    DOCKER_BUILDKIT: 1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
      when: on_success

job-manager-build:
  stage: build
  needs:
    - job-manager-build-oas
    - job-manager-validate-backend
  dependencies:
    - job-manager-build-oas
  image: docker:19.03.13-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd $DIR
    - docker build
      --target builder-base
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
    - docker build
      --target production
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:builder-base
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
  variables:
    DOCKER_DRIVER: overlay2
    DIR: 'services/job-manager'
    IMG_NAME: 'job-manager'
    DOCKER_BUILDKIT: 1
    LABEL: $CI_COMMIT_REF_NAME
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "main"'
      variables:
        LABEL: "latest"
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        LABEL: "latest"
    - if: '$CI_COMMIT_TAG'
      variables:
        LABEL: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
      when: on_success


template-build:
  stage: build
  image: docker:19.03.13-dind
  when: on_success
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd $DIR
    - docker build
      --cache-from $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
      --tag $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
      --build-arg BUILDKIT_INLINE_CACHE=1
      "."
    - docker push $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
  variables:
    DOCKER_DRIVER: overlay2
    DIR: 'templates/dockerfiles/ludwig'
    IMG_NAME: 'template-ludwig'
    DOCKER_BUILDKIT: 1
    LABEL: $CI_COMMIT_REF_NAME
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "main"'
      variables:
        LABEL: "latest"
      changes:
        - $DIR/**/*
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        LABEL: "latest"
      changes:
        - $DIR/**/*
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
    - if: '$CI_COMMIT_TAG'
      variables:
        LABEL: $CI_COMMIT_TAG
