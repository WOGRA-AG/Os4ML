name: Ludwig solver
inputs:
- {name: dataset_file, type: Dataset}
- {name: databag_file, type: Dataset}
- {name: batch_size, type: Integer, default: '8', optional: true}
- {name: epochs, type: Integer, default: '50', optional: true}
- {name: early_stop, type: Integer, default: '10', optional: true}
- {name: solution_name, type: String, default: '', optional: true}
outputs:
- {name: cls_metrics, type: ClassificationMetrics}
- {name: metrics, type: Metrics}
implementation:
  container:
    image: gitlab-registry.wogra.com/developer/wogra/os4ml/template-ludwig:test-dennis-1
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==1.8.12' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      import kfp
      from kfp.v2 import dsl
      from kfp.v2.dsl import *
      from typing import *

      def ludwig_solver(
              dataset_file: Input[Dataset],
              databag_file: Input[Dataset],
              cls_metrics: Output[ClassificationMetrics],
              metrics: Output[Metrics],
              batch_size: int = 8,
              epochs: int = 50,
              early_stop: int = 10,
              solution_name: str = '',
      ) -> None:
          from src.components.ludwig_solver import ludwig_solver

          ludwig_solver(dataset_file, databag_file, cls_metrics, metrics, batch_size, epochs, early_stop,
                        solution_name=solution_name)

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - ludwig_solver
