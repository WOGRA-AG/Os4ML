openapi: 3.0.3
info:
  title: Model Manager
  description: Model Manager
  version: 1.0.0
servers:
  - url: 'http://model-manager.os4ml.svc.cluster.local:8000'
paths:
  "/apis/v1beta1/model-manager/databags":
    get:
      summary: "get databags"
      operationId: getDatabags
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './shared-oas.yaml#/components/schemas/Databag'
    post:
      summary: "create databag"
      operationId: createDatabag
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        content:
          application/json:
            schema:
              $ref: './shared-oas.yaml#/components/schemas/Databag'
      responses:
        201:
          description: "Resource created"
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/Databag'

  "/apis/v1beta1/model-manager/databags/{databagId}":
    get:
      summary: "get databag by id"
      operationId: getDatabagById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/Databag'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: "update databag"
      operationId: updateDatabagById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        content:
          application/json:
            schema:
              $ref: './shared-oas.yaml#/components/schemas/Databag'
      responses:
        201:
          description: Created
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      summary: "delete Databag"
      operationId: deleteDatabagById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        204:
          $ref: '#/components/responses/Deleted'

  "/apis/v1beta1/model-manager/databags/{databagId}/files/dataset":
    get:
      summary: "download dataset from databag"
      operationId: downloadDataset
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/DownloadLink'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: "upload dataset to databag"
      operationId: uploadDataset
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        200:
          $ref: '#/components/responses/Uploaded'

  "/apis/v1beta1/model-manager/databags/{databagId}/files/dataframe":
    get:
      summary: "download dataset as a pandas dataframe from databag"
      operationId: downloadDataframe
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/DownloadLink'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: "upload dataset as pandas dataframe to databag"
      operationId: uploadDataframe
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        200:
          $ref: '#/components/responses/Uploaded'

  "/apis/v1beta1/model-manager/solvers":
    get:
      summary: 'get solvers'
      operationId: getSolvers
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './shared-oas.yaml#/components/schemas/Solver'

  "/apis/v1beta1/model-manager/solvers/{solverName}":
    get:
      summary: 'get solver by name'
      operationId: getSolverByName
      parameters:
        - $ref: '#/components/parameters/SolverName'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/Solver'
        404:
          $ref: '#/components/responses/NotFound'

  "/apis/v1beta1/model-manager/solutions":
    get:
      summary: 'get all solutions'
      operationId: getSolutions
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './shared-oas.yaml#/components/schemas/Solution'
    post:
      summary: "Create a Solution"
      operationId: createSolution
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      requestBody:
        content:
          application/json:
            schema:
              $ref: './shared-oas.yaml#/components/schemas/Solution'
      responses:
        201:
          description: "Solution created"
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/Solution'

  "/apis/v1beta1/model-manager/solutions/{solutionName}":
    get:
      summary: "Get a solution"
      operationId: getSolutionByName
      parameters:
        - $ref: '#/components/parameters/SolutionName'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/Solution'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: "Update a Solution"
      operationId: updateSolutionByName
      parameters:
        - $ref: '#/components/parameters/SolutionName'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      requestBody:
        content:
          application/json:
            schema:
              $ref: './shared-oas.yaml#/components/schemas/Solution'
      responses:
        200:
          description: "Solution updated"
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/Solution'
    delete:
      summary: "Delete a Solution"
      operationId: deleteSolutionByName
      parameters:
        - $ref: '#/components/parameters/SolutionName'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      responses:
        204:
          $ref: '#/components/responses/Deleted'

  "/apis/v1beta1/model-manager/solutions/{solutionName}/files/model":
    get:
      summary: "download model from solution"
      operationId: downloadModel
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/SolutionName'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/DownloadLink'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: "upload model to solution"
      operationId: uploadModel
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/SolutionName'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        200:
          $ref: '#/components/responses/Uploaded'

components:
  schemas:
    Error:
      required:
        - path
        - error
        - timestamp
        - message
        - status
    User:
      $ref: './shared-oas.yaml#/components/schemas/User'
    OIDCUser:
      $ref: './shared-oas.yaml#/components/schemas/OIDCUser'
  parameters:
    DatabagId:
      name: databagId
      in: path
      description: Id of Databag
      required: true
      schema:
        $ref: './shared-oas.yaml#/components/schemas/DatabagId'
    SolverName:
      name: solverName
      in: path
      description: name of the solver
      required: true
      schema:
        type: string
    SolutionName:
      name: solutionName
      in: path
      description: Name of the Solution
      required: true
      schema:
        type: string
  responses:
    Created:
      description: New resource created
    Deleted:
      description: The specified resource was deleted
    Updated:
      description: The specified resource was updated
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    DownloadLink:
      description: Download link
      content:
        application/json:
          schema:
            type: string
    Uploaded:
      description: The file was uploaded
    RequestBodyMismatch:
      description: The provided request body has the wrong format
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    RequestBodyInvalid:
      description: The content of the request body is invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
