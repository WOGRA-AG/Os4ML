openapi: 3.0.1
info:
  title: Os4ml Objectstore Manager Api
  description: Os4ml Objectstore Manager
  version: 0.0.1
servers:
  - url: 'http://objectstore-manager.os4ml.svc.cluster.local:8000'
paths:
  "/apis/v1beta1/objectstore":
    get:
      summary: "get all buckets"
      operationId: getAllBuckets
      tags:
        - objectstore
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bucket'

  "/apis/v1beta1/objectstore/databag":
    get:
      summary: "get all databags"
      operationId: getAllDatabags
      tags:
        - objectstore
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './shared-oas.yaml#/components/schemas/Databag'
  "/apis/v1beta1/objectstore/databag/run/{runId}":
    get:
      summary: "get databag by run id"
      operationId: getDatabagByRunId
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/RunId'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/Databag'
  "/apis/v1beta1/objectstore/databag/{databagId}":
    get:
      summary: "get databag by id"
      operationId: getDatabagById
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/DatabagId'
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/Databag'
    put:
      summary: "update databag"
      operationId: putDatabagById
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/DatabagId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: './shared-oas.yaml#/components/schemas/Databag'
      responses:
        201:
          $ref: '#/components/responses/DatabagCreated'
    post:
      summary: "create new Databag"
      operationId: postNewDatabag
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/DatabagId'
      responses:
        201:
          $ref: '#/components/responses/Created'
    delete:
      summary: "delete Databag"
      operationId: deleteDatabag
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/DatabagId'
      responses:
        204:
          $ref: '#/components/responses/Deleted'

  "/apis/v1beta1/objectstore/databag/{databagId}/dataset":
    put:
      summary: "create or update dataset"
      operationId: putDatasetByDatabagId
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: '#/components/parameters/ObjectName'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

  "/apis/v1beta1/objectstore/{bucketName}":
    post:
      summary: "create new bucket"
      operationId: postNewBucket
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/BucketName'
      responses:
        201:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/RequestBodyInvalid'
    delete:
      summary: "delete bucket"
      operationId: deleteBucket
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/BucketName'
      responses:
        204:
          $ref: '#/components/responses/Deleted'

  "/apis/v1beta1/objectstore/{bucketName}/objects":
    get:
      summary: "get all objects in bucket with the specified path prefix"
      operationId: getObjects
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/BucketName'
        - $ref: '#/components/parameters/PathPrefix'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      summary: "delete all objects in bucket with the specified path prefix"
      operationId: deleteObjects
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/BucketName'
        - $ref: '#/components/parameters/PathPrefix'
      responses:
        204:
          $ref: '#/components/responses/Deleted'
        404:
          $ref: '#/components/responses/NotFound'

  "/apis/v1beta1/objectstore/{bucketName}/json":
    get:
      summary: 'get specific json file from bucket'
      operationId: getJsonObjectByName
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/BucketName'
        - $ref: '#/components/parameters/ObjectName'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './shared-oas.yaml#/components/schemas/JsonResponse'
        404:
          $ref: '#/components/responses/NotFound'

  "/apis/v1beta1/objectstore/{bucketName}/object":
    get:
      summary: 'get specific Object from Bucket'
      operationId: getObjectByName
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/BucketName'
        - $ref: '#/components/parameters/ObjectName'
      responses:
        307:
          description: Redirect
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      summary: 'delete specific Object from Bucket'
      operationId: deleteObjectByName
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/BucketName'
        - $ref: '#/components/parameters/ObjectName'
      responses:
        204:
          $ref: '#/components/responses/Deleted'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: 'put Object to Bucket'
      operationId: putObjectByName
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/BucketName'
        - $ref: '#/components/parameters/ObjectName'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        404:
          $ref: '#/components/responses/NotFound'

  "/apis/v1beta1/objectstore/presignedgeturl":
    get:
      summary: "get Object Url"
      operationId: getObjectUrl
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/ObjectName'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Url'

  "/apis/v1beta1/objectstore/presignedputurl":
    get:
      summary: 'get presigned put Url'
      operationId: getPresignedPutUrl
      tags:
        - objectstore
      parameters:
        - $ref: '#/components/parameters/ObjectName'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        404:
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    Url:
      type: string
    ObjectName:
      type: string
    ComponentName:
      type: string
    PipelineName:
      type: string
    Bucket:
      type: object
      properties:
        name:
          $ref: './shared-oas.yaml#/components/schemas/BucketName'
      required:
        - name
    Item:
      properties:
        bucketName:
          $ref: "./shared-oas.yaml#/components/schemas/BucketName"
        objectName:
          $ref: "#/components/schemas/ObjectName"
      required:
        - bucketName
        - objectName
    Error:
      required:
        - path
        - error
        - timestamp
        - message
        - status

  parameters:
    BucketName:
      name: bucketName
      in: path
      description: Name of Bucket
      required: true
      schema:
        $ref: './shared-oas.yaml#/components/schemas/BucketName'
    DatabagId:
      name: databagId
      in: path
      description: Id of Databag
      required: true
      schema:
        $ref: './shared-oas.yaml#/components/schemas/DatabagId'
    RunId:
      name: runId
      in: path
      description: Id of a run
      required: true
      schema:
        $ref: './shared-oas.yaml#/components/schemas/RunId'
    ObjectName:
      name: objectName
      in: query
      description: Name of Object
      required: true
      schema:
        $ref: '#/components/schemas/ObjectName'
    ComponentName:
      name: componentName
      in: path
      description: Name of Component Template
      required: true
      schema:
        $ref: '#/components/schemas/ComponentName'
    PathPrefix:
      name: pathPrefix
      in: query
      description: Prefix of the paths of the objects
      required: false
      schema:
        type: string
        default: ""

  responses:
    Created:
      description: New resource created
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/BucketName"
    DatabagCreated:
      description: New resource created
    Deleted:
      description: The specified resource was deleted
    Updated:
      description: The specified resource was updated
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    RequestBodyMismatch:
      description: The provided request body has the wrong format
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    RequestBodyInvalid:
      description: The content of the request body is invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
