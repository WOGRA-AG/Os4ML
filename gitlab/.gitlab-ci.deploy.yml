.deploy:
  stage: deploy
  services:
    - name: docker:dind
      command: [ "--tls=false" ]
  tags:
    - aime
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    DOCKER_TLS_CERTDIR: ""
    CACHE_REGISTRY: developer/wogra/os4ml
    TEMPLATE_REGISTRY: wogra
  needs:
    - build-frontend
    - build-frontend-image
    - job-manager-build
    - os-manager-build
    - build-python
    - build-pandas
    - build-ludwig
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $WOGRA_DOCKER_USERNAME -p $WOGRA_DOCKER_PASSWORD docker.io
  script:
    - docker pull $CI_REGISTRY_IMAGE/objectstore-manager:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/objectstore-manager:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/objectstore-manager:$LABEL
    - docker push $CI_REGISTRY_IMAGE/objectstore-manager:$LABEL

    - docker pull $CI_REGISTRY_IMAGE/job-manager:$CI_COMMIT_SHA || true
    - docker build
      -f 'services/job-manager/Dockerfile'
      --target production
      --cache-from $CI_REGISTRY_IMAGE/job-manager:$CI_COMMIT_SHA
      --tag $CI_REGISTRY_IMAGE/job-manager:$LABEL
      --build-arg BUILDKIT_INLINE_CACHE=1
      '.'
    - docker push $CI_REGISTRY_IMAGE/job-manager:$LABEL

    - docker pull $CI_REGISTRY_IMAGE/workflow-translator:$CI_COMMIT_SHA || true
    - docker build
      -f 'services/workflow-translator/Dockerfile'
      --target production
      --cache-from $CI_REGISTRY_IMAGE/workflow-translator:$CI_COMMIT_SHA
      --tag $CI_REGISTRY_IMAGE/workflow-translator:$LABEL
      --build-arg BUILDKIT_INLINE_CACHE=1
      --build-arg IMAGE_TAG=$LABEL
      '.'
    - docker push $CI_REGISTRY_IMAGE/workflow-translator:$LABEL

    - docker pull $CI_REGISTRY_IMAGE/model-manager:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/model-manager:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/model-manager:$LABEL
    - docker push $CI_REGISTRY_IMAGE/model-manager:$LABEL

    - docker pull $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/frontend:$LABEL
    - docker push $CI_REGISTRY_IMAGE/frontend:$LABEL

    - docker pull $TEMPLATE_REGISTRY/os4ml-python:$CI_COMMIT_SHA
    - docker tag $TEMPLATE_REGISTRY/os4ml-python:$CI_COMMIT_SHA $TEMPLATE_REGISTRY/os4ml-python:$LABEL
    - docker push $TEMPLATE_REGISTRY/os4ml-python:$LABEL

    - docker pull $TEMPLATE_REGISTRY/os4ml-pandas:$CI_COMMIT_SHA
    - docker tag $TEMPLATE_REGISTRY/os4ml-pandas:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/pandas:$LABEL
    - docker push $TEMPLATE_REGISTRY/os4ml-pandas:$LABEL

    - docker pull $TEMPLATE_REGISTRY/os4ml-ludwig:$CI_COMMIT_SHA
    - docker tag $TEMPLATE_REGISTRY/os4ml-ludwig:$CI_COMMIT_SHA $TEMPLATE_REGISTRY/os4ml-ludwig:$LABEL
    - docker push $TEMPLATE_REGISTRY/os4ml-ludwig:$LABEL
  rules:

deploy-tag:
  extends:
    - .deploy
  variables:
    LABEL: $CI_COMMIT_TAG
  when: always
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: '$CI_COMMIT_TAG'

deploy-prod:
  extends:
    - .deploy
  variables:
    LABEL: 'latest'
  when: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: '$CI_COMMIT_TAG'

deploy-staging:
  extends:
    - .deploy
  variables:
    LABEL: 'stage'
  when: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: $CI_COMMIT_REF_NAME =~ /^hotfix/
    - if: '$CI_COMMIT_TAG'

deploy-release:
  extends:
    - .deploy
  variables:
    LABEL: 'rc'
  when: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^rc/
    - if: $CI_COMMIT_REF_NAME =~ /^release/

deploy-dev:
  extends:
    - .deploy
  variables:
    LABEL: 'dev'
  when: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE

deploy-feature:
  extends:
    - .deploy
  variables:
    LABEL: 'feature'
  when: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE

deploy-testing:
  extends:
    - .deploy
  variables:
    LABEL: 'testing'
  resource_group: testing
  when: manual
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE