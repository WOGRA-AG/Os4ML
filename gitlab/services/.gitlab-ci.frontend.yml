# Build frontend Image and push to registry
.build-frontend:
  stage: build
  needs: [ ]
  image: $CI_REGISTRY/developer/images/node-java:node-16-jre-11
  before_script:
    - apt-get update -y && apt-get upgrade -y
    - curl https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -o google-chrome-stable_current_amd64.deb
    - apt install -y ./google-chrome*.deb;
    - export CHROME_BIN=/usr/bin/google-chrome
  script:
    - cd $DIR
    - npm install --cache .npm_cache
    - npm run lint
    - npm run build
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
      when: on_success

.build-frontend-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context $DIR
      --dockerfile Dockerfile
      --skip-unused-stages
      --cache
      --cache-copy-layers
      --compressed-caching
      --destination $CI_REGISTRY_IMAGE/$IMG_NAME:$LABEL
  variables:
    LABEL: $CI_COMMIT_REF_NAME
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      variables:
        LABEL: "latest"
    - if: '$CI_COMMIT_TAG'
      variables:
        LABEL: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - $DIR/**/*
      when: on_success

build-frontend:
  extends:
    - .build-frontend
  variables:
    DIR: 'services/frontend'
    IMG_NAME: 'frontend'
  artifacts:
    paths:
      - services/frontend/dist/os4ml
  cache:
    key: frontend
    paths:
      - services/frontend/node_modules
      - services/frontend/.npm_cache

build-frontend-image:
  extends:
    - .build-frontend-image
  needs:
    - build-frontend
  dependencies:
    - build-frontend
  variables:
    DIR: 'services/frontend'
    IMG_NAME: 'frontend'
