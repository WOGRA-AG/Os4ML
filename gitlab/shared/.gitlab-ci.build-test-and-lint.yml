.build-test-and-lint:
  stage: test
  services:    
    - name: docker:dind
      command: ["--tls=false"]
  tags:
    - aime
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $WOGRA_DOCKER_USERNAME -p $WOGRA_DOCKER_PASSWORD docker.io
  script:
    - docker pull $CACHE_REGISTRY/$IMG_NAME:lint || true
    - docker build
      -f $DOCKERFILE
      --target lint
      --cache-from $CACHE_REGISTRY/$IMG_NAME:lint
      --build-arg BUILDKIT_INLINE_CACHE=1
      --tag $IMAGE_REGISTRY/$IMG_NAME:lint
      $BUILD_CONTEXT
    - docker push $IMAGE_REGISTRY/$IMG_NAME:lint
    - docker pull $CACHE_REGISTRY/$IMG_NAME:test || true
    - docker build
      -f $DOCKERFILE
      --target test
      --cache-from $CACHE_REGISTRY/$IMG_NAME:test
      --build-arg BUILDKIT_INLINE_CACHE=1
      --build-arg GOOGLE_APPLICATION_CREDENTIALS_BASE64="${GOOGLE_APPLICATION_CREDENTIALS_BASE64}"
      --tag $IMAGE_REGISTRY/$IMG_NAME:test
      $BUILD_CONTEXT
    - docker push $IMAGE_REGISTRY/$IMG_NAME:test
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    DOCKER_TLS_CERTDIR: ""
    CACHE_REGISTRY: developer/wogra/os4ml
    IMAGE_REGISTRY: $CI_REGISTRY_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE