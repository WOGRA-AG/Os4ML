openapi: 3.0.3
info:
  title: Model Manager
  description: Model Manager
  version: 1.0.0
servers:
  - url: 'http://model-manager.os4ml.svc.cluster.local:8000'
paths:
  "/apis/v1beta1/model-manager/databags":
    get:
      summary: "get databags"
      operationId: getDatabags
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/DatabagList'
    post:
      summary: "create databag"
      operationId: createDatabag
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        $ref: '#/components/requestBodies/Databag'
      responses:
        201:
          $ref: '#/components/responses/Databag'

  "/apis/v1beta1/model-manager/databags/{databagId}":
    get:
      summary: "get databag by id"
      operationId: getDatabagById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Databag'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: "update databag"
      operationId: updateDatabagById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        $ref: '#/components/requestBodies/Databag'
      responses:
        200:
          $ref: '#/components/responses/Databag'
    delete:
      summary: "delete Databag"
      operationId: deleteDatabagById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        204:
          $ref: '#/components/responses/Deleted'

  "/apis/v1beta1/model-manager/databags/{databagId}/start-pipeline":
    post:
      summary: "start pipeline for databag"
      operationId: startDatabagPipeline
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Databag'

  "/apis/v1beta1/model-manager/databags/{databagId}/dataset":
    get:
      summary: "get a presigned get url to download the dataset of the databag"
      operationId: getDatasetGetUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'
    post:
      summary: "create a presigned put url to upload the dataset to the databag"
      operationId: createDatasetPutUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'

  "/apis/v1beta1/model-manager/databags/{databagId}/dataframe":
    get:
      summary: "get a presigned get url to download the dataframe of the databag"
      operationId: getDataframeGetUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'
    post:
      summary: "create a presigned put url to upload the dataframe to the databag"
      operationId: createDataframePutUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/DatabagId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'

  "/apis/v1beta1/model-manager/solvers":
    get:
      summary: 'get solvers'
      operationId: getSolvers
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/SolverList'

  "/apis/v1beta1/model-manager/solvers/{solverName}":
    get:
      summary: 'get solver by name'
      operationId: getSolverByName
      parameters:
        - $ref: '#/components/parameters/SolverName'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      responses:
        200:
          $ref: '#/components/responses/Solver'
        404:
          $ref: '#/components/responses/NotFound'

  "/apis/v1beta1/model-manager/solutions":
    get:
      summary: 'get all solutions'
      operationId: getSolutions
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      responses:
        200:
          $ref: '#/components/responses/SolutionList'
    post:
      summary: "Create a Solution"
      operationId: createSolution
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      requestBody:
        $ref: '#/components/requestBodies/Solution'
      responses:
        201:
          $ref: '#/components/responses/Solution'

  "/apis/v1beta1/model-manager/solutions/{solutionId}":
    get:
      summary: "get a solution by id"
      operationId: getSolutionById
      parameters:
        - $ref: '#/components/parameters/SolutionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      responses:
        200:
          $ref: '#/components/responses/Solution'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: "update a solution by id"
      operationId: updateSolutionById
      parameters:
        - $ref: '#/components/parameters/SolutionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      requestBody:
        $ref: '#/components/requestBodies/Solution'
      responses:
        200:
          $ref: '#/components/responses/Solution'
    delete:
      summary: "delete a solution by id"
      operationId: deleteSolutionById
      parameters:
        - $ref: '#/components/parameters/SolutionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      tags:
        - modelmanager
      responses:
        204:
          $ref: '#/components/responses/Deleted'

  "/apis/v1beta1/model-manager/solutions/{solutionId}/start-pipeline":
    post:
      summary: "start pipeline for solution"
      operationId: startSolutionPipeline
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/SolutionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Solution'

  "/apis/v1beta1/model-manager/solutions/{solutionId}/model":
    get:
      summary: "get a presigned get url to download the model of the solution"
      operationId: getModelGetUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/SolutionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'
    post:
      summary: "create a presigned put url to upload the model to the solution"
      operationId: createModelPutUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/SolutionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'

  "/apis/v1beta1/model-manager/solutions/{solutionId}/prediction-template":
    get:
      summary: "get a presigned get url to download the prediction template"
      operationId: getPredictionTemplateGetUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/SolutionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'
    post:
      summary: "create a presigned put url to upload the prediction template to the solution"
      operationId: createPredictionTemplatePutUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/SolutionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'

  "/apis/v1beta1/model-manager/predictions":
    get:
      summary: "get predictions"
      operationId: getPredictions
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/PredictionList'
    post:
      summary: "create prediction"
      operationId: createPrediction
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        $ref: '#/components/requestBodies/Prediction'
      responses:
        201:
          $ref: '#/components/responses/Prediction'

  "/apis/v1beta1/model-manager/predictions/{predictionId}":
    get:
      summary: "get prediction by id"
      operationId: getPredictionById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/PredictionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Prediction'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: "update prediction"
      operationId: updatePredictionById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/PredictionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      requestBody:
        $ref: '#/components/requestBodies/Prediction'
      responses:
        200:
          $ref: '#/components/responses/Prediction'
    delete:
      summary: "delete Prediction"
      operationId: deletePredictionById
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/PredictionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        204:
          $ref: '#/components/responses/Deleted'

  "/apis/v1beta1/model-manager/predictions/{predictionId}/start-pipeline":
    post:
      summary: "start pipeline for the prediction"
      operationId: startPredictionPipeline
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/PredictionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Prediction'

  "/apis/v1beta1/model-manager/predictions/{predictionId}/prediction-data":
    get:
      summary: "get a presigned get url to download the prediction data of the prediction"
      operationId: getPredictionDataGetUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/PredictionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'
    post:
      summary: "create a presigned put url to upload the prediction data to the prediction"
      operationId: createPredictionDataPutUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/PredictionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'

  "/apis/v1beta1/model-manager/predictions/{predictionId}/prediction-result":
    get:
      summary: "get a presigned get url to download the prediction result of the prediction"
      operationId: getPredictionResultGetUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/PredictionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'
    post:
      summary: "create a presigned put url to upload the prediction result to the prediction"
      operationId: createPredictionResultPutUrl
      tags:
        - modelmanager
      parameters:
        - $ref: '#/components/parameters/PredictionId'
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/Url'

  "/apis/v1beta1/model-manager/transfer-tearning-models":
    get:
      summary: "get transfer learning models"
      operationId: getTransferLearningModel
      tags:
        - modelmanager
      parameters:
        - $ref: './shared-oas.yaml#/components/parameters/User'
      responses:
        200:
          $ref: '#/components/responses/TransferLearningModelList'

components:
  schemas:
    ErrorSchema:
      required:
        - path
        - error
        - timestamp
        - message
        - status
    User:
      $ref: './shared-oas.yaml#/components/schemas/User'
    OIDCUser:
      $ref: './shared-oas.yaml#/components/schemas/OIDCUser'
    DatabagType:
      $ref: './shared-oas.yaml#/components/schemas/DatabagType'
    PipelineStep:
      $ref: './shared-oas.yaml#/components/schemas/PipelineStep'
    Url:
      type: string
  parameters:
    DatabagId:
      name: databagId
      in: path
      description: Id of Databag
      required: true
      schema:
        $ref: './shared-oas.yaml#/components/schemas/DatabagId'
    SolutionId:
      name: solutionId
      in: path
      description: Id of the Solution
      required: true
      schema:
        $ref: './shared-oas.yaml#/components/schemas/SolutionId'
    PredictionId:
      name: predictionId
      in: path
      description: Id of the Prediction
      required: true
      schema:
        $ref: './shared-oas.yaml#/components/schemas/PredictionId'
    SolverName:
      name: solverName
      in: path
      description: name of the solver
      required: true
      schema:
        type: string
    FileName:
      name: fileName
      in: path
      description: name of a file
      required: true
      schema:
        type: string
  requestBodies:
    Databag:
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/Databag"
    Solution:
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/Solution"
    Solver:
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/Solver"
    Prediction:
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/Prediction"
    TransferLearningModel:
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/TransferLearningModel"
  responses:
    Created:
      description: New resource created
    Deleted:
      description: The specified resource was deleted
    Updated:
      description: The specified resource was updated
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorSchema"
    RequestBodyMismatch:
      description: The provided request body has the wrong format
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorSchema"
    RequestBodyInvalid:
      description: The content of the request body is invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorSchema"
    Url:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Url"
    Databag:
      description: OK
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/Databag"
    DatabagList:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "./shared-oas.yaml#/components/schemas/Databag"
    TransferLearningModelList:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "./shared-oas.yaml#/components/schemas/TransferLearningModel"
    Solution:
      description: OK
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/Solution"
    SolutionList:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "./shared-oas.yaml#/components/schemas/Solution"
    Solver:
      description: OK
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/Solver"
    SolverList:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "./shared-oas.yaml#/components/schemas/Solver"
    Prediction:
      description: OK
      content:
        application/json:
          schema:
            $ref: "./shared-oas.yaml#/components/schemas/Prediction"
    PredictionList:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "./shared-oas.yaml#/components/schemas/Prediction"
